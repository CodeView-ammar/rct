# Generated by Django 3.1.13 on 2024-05-24 17:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('our_core', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UsersDetiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=200, unique=True, verbose_name='User Name')),
                ('password', models.CharField(max_length=500, verbose_name='password')),
                ('active', models.BooleanField(default=True, verbose_name='status')),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_key', models.CharField(max_length=200, unique=True, verbose_name='User Name')),
                ('info_cpu', models.CharField(max_length=200, unique=True, verbose_name='User Name')),
            ],
        ),
        migrations.CreateModel(
            name='BranchSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='our_core.branch')),
            ],
        ),
        migrations.CreateModel(
            name='GroupPartionPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is active')),
            ],
        ),
        migrations.CreateModel(
            name='GroupScreens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_view', models.BooleanField(default=False, verbose_name='Can view')),
                ('can_add', models.BooleanField(default=False, verbose_name='Can add')),
                ('can_edit', models.BooleanField(default=False, verbose_name='Can edit')),
                ('can_delete', models.BooleanField(default=False, verbose_name='Can delete')),
                ('can_print', models.BooleanField(default=False, verbose_name='Has print')),
            ],
        ),
        migrations.CreateModel(
            name='GroupSystems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is active')),
            ],
        ),
        migrations.CreateModel(
            name='GroupTabs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is active')),
            ],
        ),
        migrations.CreateModel(
            name='info_client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_client_ar', models.CharField(max_length=200, unique=True, verbose_name='اسم العميل')),
                ('phon_client', models.CharField(max_length=200, verbose_name='رقم جوال العميل')),
                ('address_client', models.CharField(max_length=200, verbose_name='عنوان العميل ')),
                ('date_client', models.CharField(max_length=200, verbose_name='تاريخ التحاق العميل')),
                ('agreed_amount', models.CharField(max_length=200, verbose_name='المبلغ المتفق عليه دولار')),
                ('amount_paid_dollar', models.CharField(max_length=200, verbose_name='المبلغ المدفوع دولار')),
                ('remaining_dollar_amount', models.CharField(max_length=200, verbose_name='المبلغ المتبقي دولار')),
                ('activate_key1', models.CharField(max_length=200, unique=True, verbose_name='السريال المرسل من العميل')),
                ('activate_key2', models.CharField(max_length=500, verbose_name='السريل الخاص بالعميل')),
            ],
        ),
        migrations.CreateModel(
            name='PermissionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=200, unique=True, verbose_name='Group name')),
            ],
        ),
        migrations.CreateModel(
            name='Systems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_name', models.CharField(max_length=200, unique=True, verbose_name='System name')),
                ('system_name_ar', models.CharField(default='', max_length=200, verbose_name='System name ar')),
                ('system_code', models.CharField(max_length=200, unique=True, verbose_name='System code')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('branch_sys', models.ManyToManyField(through='permission.BranchSystem', to='our_core.Branch')),
                ('groub', models.ManyToManyField(through='permission.GroupSystems', to='permission.PermissionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='SystemTabs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tab_name', models.CharField(max_length=200, verbose_name='Tab name')),
                ('tab_name_ar', models.CharField(default='', max_length=200, verbose_name='Tab name ar')),
                ('tab_code', models.CharField(max_length=200, unique=True, verbose_name='Tab code')),
                ('is_system', models.BooleanField(default=False, verbose_name='Is system')),
                ('groub', models.ManyToManyField(through='permission.GroupTabs', to='permission.PermissionGroup')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.systems')),
            ],
        ),
        migrations.CreateModel(
            name='TypeDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_device', models.CharField(max_length=200, verbose_name='Name Device')),
                ('mac_address', models.CharField(max_length=50, verbose_name='Mac Address')),
                ('ip_address', models.CharField(max_length=50, verbose_name='IP Address')),
                ('serel_cpu', models.CharField(max_length=200, verbose_name='erel_cpu')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='our_core.branch', verbose_name='Branch')),
            ],
        ),
        migrations.CreateModel(
            name='UsersGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ar', models.CharField(max_length=50, verbose_name='name_ar')),
                ('name_en', models.CharField(max_length=50, verbose_name='name_en')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='our_core.company')),
            ],
        ),
        migrations.CreateModel(
            name='UsersDetilesUserPermissionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissiongroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='permission.permissiongroup')),
                ('usersdetiles', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'permission_usersdetiles_user_permission_group',
            },
        ),
        migrations.CreateModel(
            name='UsersDetilesUserBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='our_core.branch', verbose_name='branch')),
                ('usersdetiles', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='UsersDetiles')),
            ],
            options={
                'db_table': 'permission_usersdetiles_user_branch',
            },
        ),
        migrations.CreateModel(
            name='UsersDetilesTypeDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typedevice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='permission.typedevice', verbose_name='branch')),
                ('usersdetile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='UsersDetiles')),
            ],
            options={
                'db_table': 'permission_usersdetiles_type_device',
            },
        ),
        migrations.CreateModel(
            name='TabScreens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screen_name', models.CharField(max_length=200, verbose_name='Screen name')),
                ('screen_name_ar', models.CharField(default='', max_length=200, verbose_name='Screen name ar')),
                ('screen_code', models.CharField(max_length=200, unique=True, verbose_name='Screen code')),
                ('has_view', models.BooleanField(default=False, verbose_name='Has view')),
                ('has_add', models.BooleanField(default=False, verbose_name='Has add')),
                ('has_edit', models.BooleanField(default=False, verbose_name='Has edit')),
                ('has_delete', models.BooleanField(default=False, verbose_name='Has delete')),
                ('has_print', models.BooleanField(default=False, verbose_name='Has print')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('group_screens', models.ManyToManyField(through='permission.GroupScreens', to='permission.PermissionGroup')),
                ('system_tabs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.systemtabs')),
            ],
        ),
        migrations.CreateModel(
            name='TabPartionsPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_name', models.CharField(max_length=200, unique=True, verbose_name='Permission name')),
                ('permission_name_ar', models.CharField(default='', max_length=200, verbose_name='Permission name ar')),
                ('permission_code', models.CharField(max_length=200, unique=True, verbose_name='Permission code')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('group_partion', models.ManyToManyField(through='permission.GroupPartionPermission', to='permission.PermissionGroup')),
                ('tab_screens', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.tabscreens')),
            ],
        ),
        migrations.AddField(
            model_name='grouptabs',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.permissiongroup'),
        ),
        migrations.AddField(
            model_name='grouptabs',
            name='system_tabs',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.systemtabs'),
        ),
        migrations.AddField(
            model_name='groupsystems',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.permissiongroup'),
        ),
        migrations.AddField(
            model_name='groupsystems',
            name='systems',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.systems'),
        ),
        migrations.AddField(
            model_name='groupscreens',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.permissiongroup'),
        ),
        migrations.AddField(
            model_name='groupscreens',
            name='tab_screens',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.tabscreens'),
        ),
        migrations.AddField(
            model_name='grouppartionpermission',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.permissiongroup'),
        ),
        migrations.AddField(
            model_name='grouppartionpermission',
            name='tab_partions',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.tabpartionspermission'),
        ),
        migrations.AddField(
            model_name='branchsystem',
            name='branch_group',
            field=models.ManyToManyField(blank=True, to='permission.PermissionGroup'),
        ),
        migrations.AddField(
            model_name='branchsystem',
            name='system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='permission.systems'),
        ),
        migrations.AddField(
            model_name='usersdetiles',
            name='usrsgroup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='permission.usersgroup', verbose_name='usrsgroup'),
        ),
    ]
